# ============================================
# Base Stage - Common dependencies
# ============================================
FROM node:20-slim AS base

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# ============================================
# Dependencies Stage - Install all deps
# ============================================
FROM base AS deps

# Copy workspace configuration
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml* ./

# Copy package.json files for all workspace packages
COPY apps/frontend/package.json ./apps/frontend/
COPY packages/shared-types/package.json ./packages/shared-types/
COPY packages/constants/package.json ./packages/constants/

# Install all dependencies (including dev)
RUN pnpm install --frozen-lockfile

# ============================================
# Build Stage - Build production bundle
# ============================================
FROM deps AS builder

# Copy source code
COPY apps/frontend ./apps/frontend
COPY packages ./packages

# Build the frontend application
WORKDIR /app
RUN pnpm --filter frontend build

# ============================================
# Production Stage - Serve static files
# ============================================
FROM nginx:alpine AS production

# Copy custom nginx config (if needed)
# COPY infrastructure/docker/nginx-frontend.conf /etc/nginx/nginx.conf

# Copy built static files from builder
COPY --from=builder /app/apps/frontend/dist /usr/share/nginx/html

# Create nginx config for SPA routing
RUN echo 'server { \
    listen 3000; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 3000

CMD ["nginx", "-g", "daemon off;"]

# ============================================
# Development Stage - Hot reload enabled
# ============================================
FROM deps AS development

ENV NODE_ENV=development

# Copy source code
COPY apps/frontend ./apps/frontend
COPY packages ./packages

WORKDIR /app

EXPOSE 3000

# Run development server with HMR
CMD ["pnpm", "--filter", "frontend", "dev", "--host", "0.0.0.0"]
