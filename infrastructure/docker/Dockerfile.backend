# ============================================
# Base Stage - Common dependencies
# ============================================
FROM node:20-slim AS base

# Install OpenSSL 3.x (required for Prisma)
RUN apt-get update && apt-get install -y openssl ca-certificates && rm -rf /var/lib/apt/lists/*

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

# ============================================
# Dependencies Stage - Install all deps
# ============================================
FROM base AS deps

# Copy workspace configuration
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml* ./

# Copy package.json files for all workspace packages
COPY apps/backend/package.json ./apps/backend/
COPY packages/shared-types/package.json ./packages/shared-types/
COPY packages/constants/package.json ./packages/constants/

# Install all dependencies (including dev)
RUN pnpm install --frozen-lockfile

# ============================================
# Build Stage - Compile TypeScript
# ============================================
FROM deps AS builder

# Copy source code
COPY apps/backend ./apps/backend
COPY packages ./packages

# Generate Prisma Client
WORKDIR /app/apps/backend
RUN pnpm prisma generate

# Build the application
WORKDIR /app
RUN pnpm --filter backend build

# ============================================
# Production Stage - Optimized runtime
# ============================================
FROM base AS production

ENV NODE_ENV=production

# Copy workspace config
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml* ./

# Copy package.json files
COPY apps/backend/package.json ./apps/backend/
COPY packages/shared-types/package.json ./packages/shared-types/
COPY packages/constants/package.json ./packages/constants/

# Install production dependencies only
RUN pnpm install --frozen-lockfile --prod

# Copy built application and node_modules from builder
COPY --from=builder /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder /app/apps/backend/prisma ./apps/backend/prisma
COPY --from=builder /app/packages ./packages

# Copy the entire .pnpm store which contains the generated Prisma Client
COPY --from=builder /app/node_modules/.pnpm ./node_modules/.pnpm

WORKDIR /app

EXPOSE 4000

# Run compiled JavaScript (not dev server)
CMD ["node", "apps/backend/dist/main.js"]

# ============================================
# Development Stage - Hot reload enabled
# ============================================
FROM deps AS development

ENV NODE_ENV=development

# Copy source code
COPY apps/backend ./apps/backend
COPY packages ./packages

# Generate Prisma Client
WORKDIR /app/apps/backend
RUN pnpm prisma generate

WORKDIR /app

EXPOSE 4000

# Run development server with hot-reload
CMD ["pnpm", "--filter", "backend", "dev"]
